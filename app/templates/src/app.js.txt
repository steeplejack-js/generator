/**
 * app
 */

/* Node modules */

/* Third-party modules */<% if (compile) { %>
import { <%- deps.lodash.upperFirst(server) %> } from 'steeplejack-<%- server %>';
import Server from 'steeplejack/lib/server';
import Steeplejack from 'steeplejack';<% } else { %>
const { <%- deps.lodash.upperFirst(server) %> } = require('steeplejack-<%- server %>');
const Server = require('steeplejack/lib/server');
const Steeplejack = require('steeplejack');<% } %>

/* Files */<% if (compile) { %>
import config from './config';
import env from'./envvars';<% } else { %>
const config = require('./config');
const env = require('./envvars');<% } %>

const app = Steeplejack.app({
  config,
  env,
  logger: '$logger',
  modules: [
    `${__dirname}/!(routes)/**/*.js`,
  ],
  routesDir: 'routes'
});

const deps = [
  '$config'
];

app.run(deps, $config => {

  const <%- server %> = new <%- deps.lodash.upperFirst(server) %>();

  const server = new Server($config.server, <%- server %>);

  return server;

});
<% if (compile) { %>
export default app;<% } else { %>
module.exports = app;<% } %>
