{
  "name": "<%- name %>",
  "version": "0.0.0",
  "description": "<%- description %>",
  "main": "./src/app",
  "nyc": {
    "all": true,
    "check-coverage": true,
    "cache": true,
    "lines": 100,
    "statements": 100,
    "functions": 100,
    "branches": 100,
    "include": [
      "src/*.js",
      "src/**/*.js"
    ],
    "reporter": [
      "lcov",
      "text-summary"
    ],
    "sourceMap": false,
    "instrument": false
  },
  "scripts": {
    "clean": "rm -Rf ./build ./coverage",
    "clean:all": "npm run clean && rm -Rf .nyc_output npm-debug.log",
    "ci": "npm test -s && npm run coverage -s && npm run compile -s",
    "compile": "npm run clean && npm run compile:js -s && npm run copy",
    "compile:js": "babel --source-maps=inline --out-dir ./build ./src",
    "copy": "cp package.json build; cp LICENSE build; cp README.md build",
    "coverage": "cross-env NODE_ENV=test nyc mocha --ui bdd --recursive test/unit",
    "postversion": "git push --tags && git push",
    "test": "npm run test:lint -s && npm run test:unit -s && npm run test:e2e -s",
    "test:e2e": "npm run test:e2e:babel -s && npm run test:e2e:native -s",
    "test:e2e:babel": "STEEPLEJACK_TYPE=babel mocha --compilers js:babel-register --throw-deprecation --ui bdd --full-trace --recursive test/e2e/test",
    "test:e2e:native": "npm run compile -s && STEEPLEJACK_TYPE=native mocha --throw-deprecation --ui bdd --full-trace --recursive test/e2e/test",
    "test:lint": "npm run test:lint:src -s && npm run test:lint:test",
    <% if (lint === 'airbnb') { %>
    "test:lint:src": "eslint src",
    "test:lint:test": "eslint --env mocha --rule '{ max-lines: 0, global-require: 0, import/no-dynamic-require: 0, padded-blocks: 0, prefer-arrow-callback: 0, no-underscore-dangle: 0, func-names: 0, no-unused-expressions: 0, import/prefer-default-export: 0 }' test",
    <% } else if (lint === 'standard') { %>
    "test:lint:src": "standard src",
    "test:lint:test": "standard test",
    <% } else if (lint === 'semistandard') { %>
    "test:lint:src": "semistandard src",
    "test:lint:test": "semistandard test",
    <% } else { %>
    "test:lint:src": "echo 'no linting set up'; exit 0",
    "test:lint:test": "echo 'no linting set up'; exit 0",
    <% } %>
    "test:unit": "mocha --compilers js:babel-register --throw-deprecation --ui bdd --full-trace --recursive test/unit",
    "watch:coverage": "mkdir -p build; nodemon --ignore './build' --exec 'npm run coverage -s' --legacy-watch",
    "watch:test": "mkdir -p build; nodemon --ignore './build' --exec 'npm run test -s' --legacy-watch",
    "watch:test:e2e": "mkdir -p build; nodemon --ignore './build' --exec 'npm run test:e2e -s' --legacy-watch",
    "watch:test:e2e:babel": "mkdir -p build; nodemon --ignore './build' --exec 'npm run test:e2e:babel -s' --legacy-watch",
    "watch:test:e2e:native": "mkdir -p build; nodemon --ignore './build' --exec 'npm run test:e2e:native -s' --legacy-watch",
    "watch:test:lint": "mkdir -p build; nodemon --ignore './build' --exec 'npm run test:lint -s' --legacy-watch",
    "watch:test:lint:src": "mkdir -p build; nodemon --ignore './build' --exec 'npm run test:lint:src -s' --legacy-watch",
    "watch:test:lint:test": "mkdir -p build; nodemon --ignore './build' --exec 'npm run test:lint:test -s' --legacy-watch",
    "watch:test:unit": "mkdir -p build; nodemon --ignore './build' --exec 'npm run test:unit -s' --legacy-watch"
  },
  "author": "<%- author %>",
  "dependencies": {},
  "devDependencies": {}
}
