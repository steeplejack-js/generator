/**
 * <%- server %>.test.js
 */

/* Node modules */

/* Third-party modules */

/* Files */<% if (compile) { %>
import {expect, sinon} from '../../helpers/setup';
import server, {inject} from '../../../src/server/server';<% } else { %>
const {expect, sinon} = require('../../helpers/setup');
const factory = require('../../../src/server/server');

const server = factory.default;
const inject = factory.inject;<% } %>

describe('server tests', function () {

  describe('#inject', function () {

    it('should define the injector', function () {

      expect(inject).to.be.eql({
        name: 'server',
        deps: [
          'steeplejack-server',
          '$config',
          'steeplejack-<%- server %>',<% if (sockets) { %>
          'steeplejack-socketio',<% } %>
        ]
      });

    });

  });

  describe('#factory', function () {

    beforeEach(function () {
      this.config = {
        server: 'serverConfig'
      };

      this.<%- server %>Inst = {};
      this.serverLib = {
        <%- deps.lodash.upperFirst(server) %>: sinon.stub()
          .returns(this.<%- server %>Inst)
      };<% if (sockets) { %>

      this.socketInst = {};
      this.socketLib = {
        SocketIO: sinon.stub()
          .returns(this.socketInst)
      };<% } %>

      this.serverInst = {};
      this.Server = sinon.stub()
        .returns(this.serverInst);
    });

    it('should create a server and configure <%- deps.lodash.upperFirst(server) %><% if (sockets) { %> with SocketIO<% } %> as the strategy', function () {
      const obj = server(this.Server, this.config, this.serverLib<% if (sockets) { %>, this.socketLib<% } %>);

      expect(obj).to.be.equal(this.serverInst);

      expect(this.serverLib.<%- deps.lodash.upperFirst(server) %>).to.be.calledOnce
        .calledWithNew
        .calledWithExactly();<% if (sockets) { %>

      expect(this.socketLib.SocketIO).to.be.calledOnce
        .calledWithNew
        .calledWithExactly();<% } %>

      expect(this.Server).to.be.calledOnce
        .calledWithNew
        .calledWithExactly('serverConfig', this.<%- server %>Inst<% if (sockets) { %>, this.socketInst<% } %>);
    });

  });

});
