/**
 * server
 */

/* Node modules */

/* Third-party modules */

/* Files */

<%= deps.exporter('default') %> (Server, config, <%= server %><% if (sockets) { %>, socketIo<% } %>, app, logger<% if (server === 'express') { %>, View<% } else if (server === 'restify') { %>, FatalException<% } %>) => {
  const server = new Server(config.server, <%= server %><% if (sockets) { %>, socketIo<% } %>);

  const outputHandler = app.createOutputHandler(server);

  server
    .uncaughtException((req, res, err) => {
      /* Uncaught exception - log exception */
      logger.trigger('fatal', 'UNCAUGHT_EXCEPTION', {
        err
      });<% if (server === 'express') { %>

      /* Use our own error page */
      outputHandler(req, res, () => View.render('error/uncaught', {
        displayErrorDetail: config.server.displayErrorDetail,
        err,
      }, 500));<% } else { %>

      /* Replace the public error with our own error */
      outputHandler(req, res, () => {
        throw new FatalException('Unknown fatal error');
      }, false);<% } %>
    })<% if (server === 'express') { %>
    .after((req, res) => {
      /* 404 error handler */
      outputHandler(req, res, () => View.render('error/404', {}, 404));
    });<% } %>

  return server;
}

<%= deps.exporter('inject') %> = {
  name: 'server',
  deps: [
    'steeplejack-server',
    '$config',
    '<%- server %>',<% if (sockets) { %>
    'socketio',<% } %>
    '$steeplejack-app',
    '$logger',<% if (server === 'express') { %>
    'steeplejack-view'<% } else if (server === 'restify') { %>
    'steeplejack-fatal'<% } %>
  ]
};
